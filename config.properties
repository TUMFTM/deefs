#############################################################
#            	config.properties				   	  	    #
#-----------------------------------------------------------#
# Project: deefs - Discrete Event Electric Fleet Simulation	#
# Author: Michael Wittmann 							  	    #
# Company: TUM - Lehrstuhl für Fahrzeugtechnik (FTM) 	    #
# Last modified: 2015-07-22							  	    #
#############################################################
#INPUT-FILES
#Input file wich specifies the controller target (CSV)
controller_input_file=input/taxicontroller/active_taxis_one_week.csv
#Input file wich specifies the facilities (XML)
facility_input_file=input/facilities/facilities_now.xml
#Input file wich specifies the customer demand (CSV)
demand_input_file=input/demand/test_one_day.csv
#Input file wich specifies the fleet (XML)
fleet_input_file=input/fleet/fleet_eGolf_VarII_400.xml
#GRAPHHOPPER
#Folder where the routing graph is/should be stored
graphhopper_folder_graph=input/osm/graph/
#Underlying OSM-Network-File
graphhopper_osm_file=input/osm/hybrid_network_buffered.osm.pbf
#OUTPUTS
#Output Folder path
output_folder=output/simulation/Simulation/
#Name of output Sqlite database
db_name=eGolf_VarII_II
#CHARGINGPOINT
#Interval the cars SOC schould be updated in ms
chargingpoint_update_interval=60000
#timestep used for the calculation of the charging curve in ms
chargingpoint_charging_curve_delta_t=60000
#CONNECTOR
#time one needs to plug in a car at a charging point in ms
connector_plug_in_time=180000
#TAXI
#maximum time a car will stay active before it drives back to its home position and logs off in ms
taxi_max_time_active=36000000
#minimum time a car has to be active before it can be logged off by the taxi controller in ms
taxi_min_time_active=14400000
#minimum time a car has to stay inactive before it can be logged on again by the taxicontroller
taxi_min_time_inactive=0
#BEVT
#minimum estimated range a car may not undershot
bevtaxi_remaining_range_min=15000
#bound for the taxi to decide to go charging (remaining range in m) . 
bevtaxi_remaining_range_recharge=30000
#minumum soc for a taxi to accept a customer request while recharging in %.
bevtaxi_soc_min_stop_charge=70
#bound to stop the charging process in %.
bevtaxi_soc_max_stop_charge=85
#minimum time a taxi has to charge at a charging point in %.
bevtaxi_min_time_charging=0
#range a taxi looks for the fastest connector in m. If no available chargingpossibility was found in 
#this range, it will choose the next free CP by distance.
#must be bigger than bevtaxi_remaining_range_min
bevtaxi_max_distance_best_connector=4000
#DEBUG
debugMode=0